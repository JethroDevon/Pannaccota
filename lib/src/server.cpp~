
#include "../header/server.h"


Server::Server(int _PORT):PORT(_PORT){

    addrlen = sizeof(serv_addr);
    opt = 1;
    
    if ((server_fd = socket(AF_INET, SOCK_STREAM, 0)) == 0) { 

      printf("could not create file descriptor, check permissions\n");
    } 

    if (setsockopt(server_fd, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt))){ 

      printf("port not available\n");
    }
    
    serv_addr.sin_family = AF_INET; 
    serv_addr.sin_addr.s_addr = INADDR_ANY; 
    serv_addr.sin_port = htons(PORT); 

    if (bind(server_fd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0){

      printf("could not bind \n");
    }  
  }
}

int Server::passConnection(){

    //will hang here until connection is made
    if(listen(server_fd, 3) < 0){

      printf("listen failure?");
    }else{
      
      printf("something happened");
    }
    
    return accept(server_fd, (struct sockaddr *)&address,(socklen_t*)&addrlen));
}
